{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/Form/index.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","userId","currentUser","usersFromServer","find","item","className","href","TodoInfo","title","completed","cn","TodoList","items","map","Form","updateState","useState","titleInput","userSelect","formState","setFormState","formErrors","setFormErrors","action","method","onSubmit","e","preventDefault","p","Math","max","placeholder","type","value","onChange","test","target","disabled","App","todosFromServer","todos","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.050e23c3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport usersFromServer from '../../api/users';\n\nexport const UserInfo: FC<{ userId: number }> = ({ userId }) => {\n  const currentUser = usersFromServer.find((item) => item.id === userId);\n\n  if (!currentUser) {\n    return null;\n  }\n\n  const { email, name } = currentUser;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoItem } from '../../types/todo';\n\nexport const TodoInfo: FC<{ item: TodoItem }> = ({ item }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = item;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo userId={userId} />\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoItem } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList: FC<{ items: TodoItem[] }> = ({ items }) => {\n  return (\n    <section className=\"TodoList\">\n      {items.map((item) => {\n        return <TodoInfo key={item.id} item={item} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import {\n  Dispatch,\n  FC,\n  SetStateAction,\n  useState,\n} from 'react';\nimport usersFromServer from '../../api/users';\nimport { TodoItem } from '../../types/todo';\n\ninterface FormProps {\n  updateState: Dispatch<SetStateAction<TodoItem[]>>;\n}\n\nconst Form: FC<FormProps> = ({ updateState }) => {\n  const [formState, setFormState] = useState({\n    titleInput: '',\n    userSelect: '0',\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    titleInput: false,\n    userSelect: false,\n  });\n\n  const getMaxId = (items: TodoItem[]) => {\n    const maxId = Math.max(...items.map((item) => item.id));\n\n    return maxId + 1;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!formState.titleInput || formState.userSelect === '0') {\n      setFormErrors({\n        titleInput: !formState.titleInput,\n        userSelect: formState.userSelect === '0',\n      });\n\n      return;\n    }\n\n    updateState((p) => [\n      ...p,\n      {\n        id: getMaxId(p),\n        title: formState.titleInput,\n        completed: false,\n        userId: +formState.userSelect,\n      },\n    ]);\n\n    setFormState({ titleInput: '', userSelect: '0' });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line max-len\n    if (/[^a-zA-Z0-9s\\u0020\\u0406\\u0407\\u042c\\u045e\\u042f\\u0456\\u0457\\u044c\\u044e\\u044f\\u0410-\\u0429\\u0430-\\u0449]/.test(e.target.value)) {\n      return;\n    }\n\n    if (e.target.value) {\n      setFormErrors((p) => ({\n        userSelect: p.userSelect,\n        titleInput: false,\n      }));\n    }\n\n    setFormState((p) => ({\n      userSelect: p.userSelect,\n      titleInput: e.target.value,\n    }));\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          placeholder=\"Title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={formState.titleInput}\n          onChange={handleInputChange}\n        />\n\n        {formErrors.titleInput && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={formState.userSelect}\n          onChange={(e) => {\n            if (e.target.value !== '0') {\n              setFormErrors((p) => ({\n                userSelect: false,\n                titleInput: p.titleInput,\n              }));\n            }\n\n            setFormState((p) => ({\n              userSelect: e.target.value,\n              titleInput: p.titleInput,\n            }));\n          }}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n\n          {usersFromServer.map((item) => {\n            return (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            );\n          })}\n        </select>\n\n        {formErrors.userSelect && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport Form from './components/Form';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form updateState={setTodos} />\n\n      <TodoList items={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}